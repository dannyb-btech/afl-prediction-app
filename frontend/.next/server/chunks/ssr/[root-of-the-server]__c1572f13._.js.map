{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/danny/afl-prediction-app/frontend/app/page.js"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Typography, Card, CardContent, Grid, CircularProgress, Alert, Button, Container, AppBar, Toolbar } from \"@mui/material\";\r\n\r\nexport default function Home() {\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/getTeamPredictions\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMatches(Array.isArray(data) ? data : [data]);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to load matches\");\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            AFL Predictions\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container sx={{ mt: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Upcoming AFL Matches</Typography>\r\n        {loading && <CircularProgress />}\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        <Grid container spacing={2}>\r\n          {matches.map(match => (\r\n            <Grid item xs={12} md={6} key={match.matchId}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\">\r\n                    {match.homeTeam} vs {match.awayTeam}\r\n                  </Typography>\r\n                  <Typography color=\"text.secondary\">\r\n                    {match.venue} â€” {match.matchDate}\r\n                  </Typography>\r\n                  <Button\r\n                    component={Link}\r\n                    href={`/match/${match.matchId}`}\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    View Player Predictions\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;AAKe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,2BACH,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,IACpB,IAAI,CAAC,CAAA;YACJ,WAAW,MAAM,OAAO,CAAC,QAAQ,OAAO;gBAAC;aAAK;YAC9C,WAAW;QACb,GACC,KAAK,CAAC;YACL,SAAS;YACT,WAAW;QACb;IACJ,GAAG,EAAE;IAEL,qBACE;;0BACE,8OAAC,iMAAA,CAAA,SAAM;gBAAC,UAAS;0BACf,cAAA,8OAAC,oMAAA,CAAA,UAAO;8BACN,cAAA,8OAAC,6MAAA,CAAA,aAAU;wBAAC,SAAQ;wBAAK,WAAU;wBAAM,IAAI;4BAAE,UAAU;wBAAE;kCAAG;;;;;;;;;;;;;;;;0BAKlE,8OAAC,0MAAA,CAAA,YAAS;gBAAC,IAAI;oBAAE,IAAI;gBAAE;;kCACrB,8OAAC,6MAAA,CAAA,aAAU;wBAAC,SAAQ;wBAAK,YAAY;kCAAC;;;;;;oBACrC,yBAAW,8OAAC,+NAAA,CAAA,mBAAgB;;;;;oBAC5B,uBAAS,8OAAC,8LAAA,CAAA,QAAK;wBAAC,UAAS;kCAAS;;;;;;kCACnC,8OAAC,2LAAA,CAAA,OAAI;wBAAC,SAAS;wBAAC,SAAS;kCACtB,QAAQ,GAAG,CAAC,CAAA,sBACX,8OAAC,2LAAA,CAAA,OAAI;gCAAC,IAAI;gCAAC,IAAI;gCAAI,IAAI;0CACrB,cAAA,8OAAC,2LAAA,CAAA,OAAI;8CACH,cAAA,8OAAC,gNAAA,CAAA,cAAW;;0DACV,8OAAC,6MAAA,CAAA,aAAU;gDAAC,SAAQ;;oDACjB,MAAM,QAAQ;oDAAC;oDAAK,MAAM,QAAQ;;;;;;;0DAErC,8OAAC,6MAAA,CAAA,aAAU;gDAAC,OAAM;;oDACf,MAAM,KAAK;oDAAC;oDAAI,MAAM,SAAS;;;;;;;0DAElC,8OAAC,iMAAA,CAAA,SAAM;gDACL,WAAW,4JAAA,CAAA,UAAI;gDACf,MAAM,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;gDAC/B,SAAQ;gDACR,IAAI;oDAAE,IAAI;gDAAE;0DACb;;;;;;;;;;;;;;;;;+BAdwB,MAAM,OAAO;;;;;;;;;;;;;;;;;;AAyBxD","debugId":null}}]
}